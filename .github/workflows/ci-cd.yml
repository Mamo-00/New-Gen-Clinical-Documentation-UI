name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm ci
    - name: Run linter
      run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm ci
    - name: Build project
      run: npm run build
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install dependencies
      run: npm ci
    - name: Run TypeScript compiler
      run: npx tsc --noEmit

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run npm audit
      run: npm audit

  notify:
    runs-on: ubuntu-latest
    needs: [lint, test, build, type-check, security-scan]
    if: always()
    steps:
    - name: Check job status
      id: check
      run: |
        if [[ ${{ job.status }} == 'success' ]]; then
          echo "message=CI/CD Pipeline completed successfully for ${{ github.repository }}" >> $GITHUB_OUTPUT
        else
          echo "message=CI/CD Pipeline failed for ${{ github.repository }}" >> $GITHUB_OUTPUT
        fi
    - name: Create GitHub Issue on Failure
      if: failure()
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'CI/CD Pipeline Failed',
            body: 'The CI/CD pipeline has failed. Please check the [Actions tab](https://github.com/${{github.repository}}/actions) for more details.'
          })